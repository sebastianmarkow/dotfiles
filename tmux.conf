# rose-pine-moon colors
thm_nc="#1f1d30"
thm_base="#232136"
thm_surface="#2a273f"
thm_overlay="#393552"
thm_muted="#6e6a86"
thm_subtle="#908caa"
thm_text="#e0def4"
thm_love="#eb6f92"
thm_gold="#f6c177"
thm_rose="#ea9a97"
thm_pine="#3e8fb0"
thm_foam="#9ccfd8"
thm_iris="#c4a7e7"
thm_hl_low="#2a283e"
thm_hl_med="#44415a"
thm_hl_high="#56526e"

if-shell 'test -n "$KITTY_INSTALLATION_DIR"' 'set -g default-terminal "xterm-kitty"' 'set -g default-terminal "screen-256color"'
set -g default-command "/opt/homebrew/bin/fish --interactive"

# Timing
set -g display-time 1500
set -g display-panes-time 5000
set -g status-interval 60
set -g repeat-time 1000
set -g escape-time 0

# Indexing
set -g base-index 1
setw -g pane-base-index 1

# Behavior
setw -g monitor-activity off
set -g focus-events on
set -g renumber-windows on
setw -g automatic-rename on

# Title
set -g set-titles on
set -g set-titles-string "#W - #{pane_title} (session: #S)"

# History
set -g history-limit 100000

# Modes
set -g status-keys vi
setw -g mode-keys vi
setw -g xterm-keys on

# Mouse
set -g mouse on

# Size
set -g main-pane-width '60%'
set -g other-pane-width '40%'
set -g main-pane-height '60%'
set -g other-pane-height '40%'

# Bar
set -g status-position top
set -g status-justify left
set -g status-style "fg=$thm_text,bg=$thm_base"

# Widgets
set -g status-left-length 0
set -g status-right-length 0
set -g status-left ""
set -g status-right ""

# Windows
set -g window-style "bg=$thm_nc"
set -g window-active-style "bg=$thm_base"

# Messages
set -g message-command-style "fg=$thm_base,bg=$thm_text,italics"
set -g message-style "fg=$thm_base,bg=$thm_love,italics"
set -g mode-style "fg=$thm_text,bg=$thm_pine"

# Tabs
setw -g window-status-format "#{?#{==:#{window_index},1},,#[fg=$thm_overlay,bg=$thm_base]}#[fg=$thm_muted,bg=$thm_overlay] #I #{?window_activity_flag,#[blink]!#[noblink] ,}#{?window_zoomed_flag, ,}#W  #{=24:pane_title} #[fg=$thm_overlay,bg=$thm_base]"
setw -g window-status-current-format "#{?#{==:#{window_index},1},,#[fg=$thm_foam,bg=$thm_base]}#[fg=$thm_base,bg=$thm_foam] #I #{?window_zoomed_flag, ,}#W  #{=24:pane_title} #[fg=$thm_foam,bg=$thm_base]"
setw -g window-status-separator ""


# Popups
set -g popup-border-lines heavy
set -g popup-border-style "fg=$thm_iris,bg=$thm_base"
set -g popup-style "bg=$thm_base"

# Clock
setw -g clock-mode-colour "$thm_iris"
setw -g clock-mode-style 24

# Only show status bar and pane status if more than one window/pane is open
set -g status off
set -g pane-border-status off
set-hook -g after-new-session     'if "[ #{window_panes} -eq 1 ]" "set pane-border-status off"'
set-hook -g after-new-window      'if "[ #{window_panes} -eq 1 ]" "set pane-border-status off"; if "[ #{session_windows} -gt 1 ]" "set status on"'
set-hook -g after-kill-pane       'if "[ #{window_panes} -eq 1 ]" "set pane-border-status off"; if "[ #{session_windows} -lt 2 ]" "set status off"'
set-hook -g pane-exited           'if "[ #{window_panes} -eq 1 ]" "set pane-border-status off"; if "[ #{session_windows} -lt 2 ]" "set status off"'
set-hook -g after-split-window    'if "[ #{window_panes} -gt 1 ]" "set pane-border-status top"'
set-hook -g window-layout-changed 'if "[ #{session_windows} -lt 2 ]" "set status off"'

set -g pane-border-format " #P #{?window_zoomed_flag,#[fg=$thm_text]  ,}"
set -g pane-border-lines heavy
set -g pane-border-indicators off
set -g pane-border-style "fg=$thm_muted,bg=$thm_nc"
set -g pane-active-border-style "fg=$thm_iris,bg=$thm_base"

# Prefix
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Reload config
unbind C-r
bind C-r source-file ~/.tmux.conf \; display " 󰑓 Configuration reloaded"

# Back off!
unbind ,
unbind \;
unbind .

# lazygit popup
unbind g
bind g display-popup -T "Git" -w "120" -h "90%" -d "#{pane_current_path}" -E "exec $SHELL -ilc 'lazygit'"

# btop popup
unbind t
bind t display-popup -T "Btop" -w "120" -h "90%" -E "exec $SHELL -ilc btop"

# k9s popup
unbind 8
bind 8 display-popup -T "K9s" -w "120" -h "90%" -E "exec $SHELL -ilc k9s"

# yazi popup
unbind y
bind y display-popup -T "Yazi" -w "120" -h "90%" -E "exec $SHELL -ilc yazi"

# fish popup
unbind f
bind f display-popup -T "Shell" -w "120" -h "90%" -d "#{pane_current_path}" -E "exec $SHELL -ili"

# wtf popup
unbind b
bind b display-popup -T "Dashboard" -w "122" -h "80%" -E "exec $SHELL -ilc wtfutil"

# Kill
unbind x
bind x confirm -p " 󰀩 Kill pane? (y/n)" "kill-pane"
unbind X
bind X confirm -p " 󰀩 Kill server? (y/n)" "kill-server"

# Toggle
unbind !
bind -r ! setw monitor-activity
unbind =
bind -r = setw synchronize-panes

# Swap panes
bind > swap-pane -D
bind < swap-pane -U

# Switch windows
bind -r Tab next-window
bind -r S-Tab previous-window

is_occupied="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|atuin)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_occupied" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_occupied" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_occupied" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_occupied" 'send-keys M-l'  'select-pane -R'

 # Pane resizing
bind -n M-H resize-pane -L 5
bind -n M-J resize-pane -D 5
bind -n M-K resize-pane -U 5
bind -n M-L resize-pane -R 5
unbind z
bind -n M-z resize-pane -Z


# Clipboard
unbind Escape
bind Escape copy-mode
unbind p
bind p paste-buffer
unbind -Tcopy-mode-vi Escape
bind -Tcopy-mode-vi Escape send -X cancel
unbind -Tcopy-mode-vi v
bind -Tcopy-mode-vi v send -X begin-selection
unbind -Tcopy-mode-vi c-v
bind -Tcopy-mode-vi C-v send -X rectangle-toggle
unbind -Tcopy-mode-vi y
bind -Tcopy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"

# Window
unbind c
bind c new-window -c "#{pane_current_path}"
unbind s
bind s split-window -c "#{pane_current_path}"
unbind v
bind v split-window -h -c "#{pane_current_path}"
unbind |
bind | select-layout even-horizontal
unbind -
bind - select-layout even-vertical
unbind "#"
bind "#" select-layout tiled
unbind r
bind -r r rotate-window -D
unbind R
bind -r R rotate-window -U
unbind w
bind w choose-window -F "#{?window_active,>, }#I #W #{pane_current_path}"
unbind m
bind m select-pane -m
unbind M
bind M select-pane -M
